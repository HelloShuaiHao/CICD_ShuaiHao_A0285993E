name: My closest CI project to real world development
on:
    push:
                      
env:
  ifVulnerable: false
  ifNORUN: false
jobs:
    stopWorkflow:
      runs-on: ubuntu-latest
      steps:
        - name: Terminate
          if: ${{ startsWith(github.event.head_commit.message, '#NORUN')}}
          run: exit 1
    BuildAndScan:
      continue-on-error: true
      runs-on: ubuntu-latest
      needs: stopWorkflow
      steps:
        - name: checkout code
          uses: actions/checkout@v4
        - name: Build an image from Dockerfile
          run: |
            docker build -t docker.io/my-organization/my-app:${{github.sha}} .
        - name: Run Trivy vulnerability scanner
          id: trivy
          uses: aquasecurity/trivy-action@master
          with:
            image-ref: 'docker.io/my-organization/my-app:${{ github.sha }}' # 对之前的image进行扫描
            format: 'table'
            exit-code: '1'       # 出错以后不退出 继续执行 根据全局变量判断有无ciritical vulnerability
            ignore-unfixed: true
            vuln-type: 'os,library'
            severity: 'CRITICAL,HIGH' # 打开HIGH就会失败 关闭就会成功：'CRITICAL,HIGH'
            output: 'trivy-results.txt'

    SendVulnerabilityToSlack:
      runs-on: ubuntu-latest
      needs: BuildAndScan
      if: ${{ needs.BuildAndScan.result == 'failure' }}
      steps:  
        - name: Vulnerability Found
          if: ${{env.ifVulnerable == 'true'}}
          id: notify
          uses: slackapi/slack-github-action@v1.24.0
          with:
            payload: |
              {
                "text": "From Shuai Hao",
                "blocks": 
                  [
                    {
                      "type": "header",
                      "text": {
                        "type": "plain_text",
                        "text": "https://github.com/${{github.repository}}"
                      }
                    },
                    {
                      "type": "section",
                      "fields": [                        
                        {
                          "type": "mrkdwn",
                          "text": "*Ref:*\n${{github.ref}}"
                        },
                        {
                          "type": "mrkdwn",
                          "text": "*Event:*\n${{github.event_name}}"
                        },
                        {
                          "type": "mrkdwn",
                          "text": "*Actions URL:*\n<https://github.com/${{github.repository}}/actions|CICD-Assignment>"
                        },
                        {
                          "type": "mrkdwn",
                          "text": "*Commit:*\n<https://github.com/${{github.repository}}/commit/${{github.sha}}|CICD-Commit>"
                        },
                        {
                          "type": "mrkdwn",
                          "text": "*Scan Failed:*\nFailed trivy scan, see upload report."
                        },
                        {
                          "type": "mrkdwn",
                          "text": "*Name:*\nShuai Hao"
                        },
                        {
                          "type": "mrkdwn",
                          "text": "*Metriculation:*\nA0285993E"
                        },
                        {
                          "type": "mrkdwn",
                          "text": "*Email:*\ne1221805@u.nus.edu"
                        },
                        {
                          "type": "mrkdwn",
                          "text": "*Git:*\nhttps://github.com/HelloShuaiHao/CICD_ShuaiHao_A0285993E"
                        },
                        {
                          "type": "mrkdwn",
                          "text": "*Image:*\nnot yet"
                        }
                      ]
                    }
                  ]
              }
          env:
            SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
            SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
        - name: Upload the report to slack 
          if: ${{env.ifVulnerable == 'true'}}
          id: upload
          uses: MeilCli/slack-upload-file@v3
          with:
            slack_token: ${{ secrets.SLACK_TOKEN }}
            channel_id: ${{ secrets.SLACK_CHANNEL_ID }}
            file_path: 'trivy-results.txt'
            initial_comment: 'post by Shuai Hao, A0285993E'
        - name: Terminate workflow
          if: ${{env.ifVulnerable == 'true' }}
          run: exit 1

    # 如果发现有CRITICAL肯定会提前终止  所以下面不用判断 肯定成功
    docker-cosign:
      needs: BuildAndScan
      runs-on: ubuntu-latest
      permissions:
        contents: read
        packages: write
        id-token: write 
      steps:
        -
          name: Set up QEMU
          uses: docker/setup-qemu-action@v3
        -
          name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3
        -
          name: Login to Docker Hub
          uses: docker/login-action@v3
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}
        -
          name: Build and push
          id: build-and-push
          uses: docker/build-push-action@v5
          with:
            push: true
            tags: sh20010217/shuaihao:${{github.sha}} 
        - name: Install Cosign
          uses: sigstore/cosign-installer@v3.1.1
          with: 
            cosign-release: 'v2.1.1' 
        - name: Check install!
          run: cosign version 
        - name: Sign image with a key
          run: |
            cosign sign --yes --rekor-url "https://rekor.sigstore.dev/" sh20010217/shuaihao:${{github.sha}}  
          env:
            COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
            COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
            DIGEST: ${{ steps.build_and_push.outputs.digest }}                   
        ######
    Send-Successful-Msg-To-Slack:
      needs: docker-cosign
      runs-on: ubuntu-latest
      steps:
        - name: Send-Msg
          uses: slackapi/slack-github-action@v1.24.0
          with:
            payload: |
              {
                "text": "From Shuai Hao",
                "blocks":
                  [
                    {
                      "type": "header",
                      "text": {
                        "type": "plain_text",
                        "text": "https://github.com/${{github.repository}}"
                      }
                    }, 
                    {
                      "type": "section",
                      "fields": [                        
                        {
                          "type": "mrkdwn",
                          "text": "*Ref:*\n${{github.ref}}"
                        },
                        {
                          "type": "mrkdwn",
                          "text": "*Event:*\n${{github.event_name}}"
                        },
                        {
                          "type": "mrkdwn",
                          "text": "*Actions URL:*\n<https://github.com/${{github.repository}}/actions|CICD-Assignment>"
                        },
                        {
                          "type": "mrkdwn",
                          "text": "*Commit:*\n<https://github.com/${{github.repository}}/commit/${{github.sha}}|CICD-Commit>"
                        },
                        {
                          "type": "mrkdwn",
                          "text": "*Scan Failed:*\nFailed trivy scan, see upload report."
                        },
                        {
                          "type": "mrkdwn",
                          "text": "*Name:*\nShuai Hao"
                        },
                        {
                          "type": "mrkdwn",
                          "text": "*Metriculation:*\nA0285993E"
                        },
                        {
                          "type": "mrkdwn",
                          "text": "*Email:*\ne1221805@u.nus.edu"
                        },
                        {
                          "type": "mrkdwn",
                          "text": "*Git:*\nhttps://github.com/HelloShuaiHao/CICD_ShuaiHao_A0285993E"
                        },
                        {
                          "type": "mrkdwn",
                          "text": "*Image:*\nhttps://hub.docker.com/repository/docker/sh20010217/shuaihao/general"
                        }
                      ]
                    }                                       
                  ]
              }
          env:
            SLACK_WEBHOOK_URL: ${{secrets.SLACK_WEBHOOK_URL}}
            SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK    

          
          
  



          
        